name: Security Scan

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '30 5 * * 1'  # Weekly security scan on Mondays

jobs:
  codeql:
    name: Analyze with CodeQL
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'python' ]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3  # FIXED: Upgraded from v2 to v3
        with:
          languages: ${{ matrix.language }}
          queries: security-and-quality  # Enhanced query pack

      - name: Autobuild
        uses: github/codeql-action/autobuild@v3  # FIXED: Upgraded from v2 to v3

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3  # FIXED: Upgraded from v2 to v3
        with:
          category: "/language:${{matrix.language}}"

  trivy-filesystem:
    name: Scan filesystem with Trivy
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner in fs mode
        uses: aquasecurity/trivy-action@0.28.0
        with:
          scan-type: 'fs'
          ignore-unfixed: true
          format: 'sarif'
          output: 'trivy-fs-results.sarif'
          severity: 'CRITICAL,HIGH,MEDIUM'  # Enhanced: Added MEDIUM severity

      - name: Upload Trivy filesystem scan results
        uses: github/codeql-action/upload-sarif@v3  # FIXED: Upgraded from v2 to v3
        with:
          sarif_file: 'trivy-fs-results.sarif'

  trivy-container:
    name: Scan container images with Trivy
    runs-on: ubuntu-latest
    needs: [codeql, trivy-filesystem]  # Run after filesystem scan
    permissions:
      contents: read
      security-events: write
      packages: read

    strategy:
      matrix:
        arch: [amd64, arm64, armv7]  # Scan primary architectures

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build test image for ${{ matrix.arch }}
        run: |
          docker buildx create --use
          docker buildx build \
            --platform linux/${{ matrix.arch }} \
            --load \
            --tag test-aicleaner:${{ matrix.arch }} \
            ./addons/aicleaner_v3

      - name: Run Trivy vulnerability scanner on container image
        uses: aquasecurity/trivy-action@0.28.0
        with:
          image-ref: 'test-aicleaner:${{ matrix.arch }}'
          format: 'sarif'
          output: 'trivy-image-${{ matrix.arch }}-results.sarif'
          severity: 'CRITICAL,HIGH,MEDIUM'

      - name: Upload Trivy container scan results
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-image-${{ matrix.arch }}-results.sarif'

  dependency-check:
    name: Dependency Security Check
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-security-${{ hashFiles('addons/aicleaner_v3/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-security-
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install safety bandit
          cd addons/aicleaner_v3 && pip install -r requirements.txt

      - name: Run Safety check for known vulnerabilities
        run: |
          cd addons/aicleaner_v3
          safety check --json --output safety-report.json || true

      - name: Run Bandit security linter
        run: |
          cd aicleaner_v3
          bandit -r . -f json -o bandit-report.json || true

      - name: Upload security reports as artifacts
        uses: actions/upload-artifact@v3
        with:
          name: security-reports
          path: |
            addons/aicleaner_v3/safety-report.json
            addons/aicleaner_v3/bandit-report.json
          retention-days: 30