name: "AICleaner V3"
version: "1.0.0"
slug: "aicleaner_v3"
description: "Intelligently cleans and processes data using AI."
url: "https://github.com/drewcifer/aicleaner_v3/tree/main/addons/aicleaner_v3"
arch:
  - aarch64
  - amd64
  - armhf
  - armv7
  - i386
init: false
startup: application
boot: auto
hassio_api: true
hassio_role: default
homeassistant_api: true
host_network: false
privileged: false
map:
  - data:rw
  - config:rw
  - ssl:ro
ports: {}
options:
  # General settings
  active_provider: "ollama"
  log_level: "info"
  
  # AI Provider API Keys
  api_key_openai: ""
  api_key_gemini: ""
  ollama_base_url: "http://localhost:11434"
  ollama_default_model: "llama2"
  
  # MQTT Broker settings
  mqtt_host: "core-mosquitto"
  mqtt_port: 1883
  mqtt_username: ""
  mqtt_password: ""
  mqtt_client_id: "aicleaner_v3"
  mqtt_discovery_enabled: true
  mqtt_discovery_prefix: "homeassistant"
  
  # Service API settings
  api_port: 8099
  api_key_enabled: false
  api_key: ""
  
  # Performance settings
  cache_enabled: true
  metrics_retention_days: 7
  
  # Security settings
  key_rotation_enabled: true
  default_rotation_days: 30

schema:
  # General settings
  active_provider: "list(openai|anthropic|gemini|ollama)"
  log_level: "list(trace|debug|info|notice|warning|error|fatal)"
  
  # AI Provider API Keys
  api_key_openai: "password"
  api_key_gemini: "password"
  ollama_base_url: "url"
  ollama_default_model: "str"
  
  # MQTT Broker settings
  mqtt_host: "str"
  mqtt_port: "port"
  mqtt_username: "str?"
  mqtt_password: "password?"
  mqtt_client_id: "str"
  mqtt_discovery_enabled: "bool"
  mqtt_discovery_prefix: "str"
  
  # Service API settings
  api_port: "port"
  api_key_enabled: "bool"
  api_key: "password?"
  
  # Performance settings
  cache_enabled: "bool"
  metrics_retention_days: "int"
  
  # Security settings
  key_rotation_enabled: "bool"
  default_rotation_days: "int"
services:
  - "mqtt:want"
image: "ghcr.io/drewcifer/aicleaner_v3/{arch}"