# Enhanced Docker Compose for AICleaner v3 Local Testing
# Comprehensive testing environment with proper MQTT, monitoring, and validation

services:
  # MQTT Broker with proper configuration for HA discovery
  mosquitto-test:
    image: eclipse-mosquitto:latest
    container_name: aicleaner-mosquitto-test
    restart: unless-stopped
    ports:
      - "1883:1883"
      - "9001:9001"
    volumes:
      - ./test-config/mosquitto.conf:/mosquitto/config/mosquitto.conf:ro
      - mqtt_data:/mosquitto/data
      - mqtt_log:/mosquitto/log
    networks:
      - aicleaner_test_network
    healthcheck:
      test: ["CMD-SHELL", "mosquitto_sub -h localhost -t '$$SYS/broker/uptime' -C 1"]
      interval: 10s
      timeout: 5s
      retries: 3

  # Real Home Assistant for integration testing
  homeassistant:
    image: homeassistant/home-assistant:stable
    container_name: aicleaner-homeassistant
    restart: unless-stopped
    ports:
      - "8123:8123"
    volumes:
      - ./testing/ha-config:/config
      - /etc/localtime:/etc/localtime:ro
    networks:
      - aicleaner_test_network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8123 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    environment:
      - PYTHONUNBUFFERED=1
    depends_on:
      mosquitto-test:
        condition: service_healthy

  # AICleaner add-on under test
  aicleaner-test:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        BUILD_FROM: python:3.11-alpine
    container_name: aicleaner-app-test
    restart: unless-stopped
    depends_on:
      mosquitto-test:
        condition: service_healthy
      homeassistant:
        condition: service_healthy
    environment:
      # Core Configuration
      - LOG_LEVEL=debug
      - PRIMARY_API_KEY=sk-test-primary-key-12345678901234567890
      - BACKUP_API_KEYS=["sk-test-backup-1-12345678901234567890", "sk-test-backup-2-12345678901234567890"]
      - DEVICE_ID=aicleaner_v3_test
      - MQTT_DISCOVERY_PREFIX=homeassistant
      
      # MQTT Configuration  
      - MQTT_HOST=mosquitto-test
      - MQTT_PORT=1883
      # Anonymous MQTT for testing
      # - MQTT_USER=aicleaner
      # - MQTT_PASSWORD=test_password
      
      # HA API Configuration
      - SUPERVISOR_TOKEN=test_supervisor_token_12345
      - HOMEASSISTANT_API=http://homeassistant:8123/api
      - HA_ACCESS_TOKEN=${HA_ACCESS_TOKEN}
      
      # Testing Flags
      - TESTING_MODE=true
      - PYTHONUNBUFFERED=1
    volumes:
      - test_data:/data
      - test_config:/config
      - ./test-results:/app/test-results
    networks:
      - aicleaner_test_network
    healthcheck:
      test: ["CMD-SHELL", "python -c 'import socket; s=socket.socket(); s.connect((\"mosquitto-test\", 1883)); s.close()' || exit 1"]
      interval: 15s
      timeout: 10s
      retries: 3
      start_period: 30s

  # MQTT Monitor for testing validation
  mqtt-monitor:
    image: python:3.11-alpine
    container_name: aicleaner-mqtt-monitor
    restart: unless-stopped
    depends_on:
      - mosquitto-test
    volumes:
      - ./test-scripts/mqtt_monitor.py:/app/mqtt_monitor.py:ro
    working_dir: /app
    command: >
      sh -c "pip install paho-mqtt &&
             python mqtt_monitor.py"
    environment:
      - MQTT_HOST=mosquitto-test
      - MQTT_PORT=1883
      # Anonymous MQTT for testing
      # - MQTT_USER=aicleaner
      # - MQTT_PASSWORD=test_password
      - PYTHONUNBUFFERED=1
    networks:
      - aicleaner_test_network

  # Test Runner for automated validation
  test-runner:
    image: python:3.11-alpine
    container_name: aicleaner-test-runner
    volumes:
      - ./test-scripts:/app/tests:ro
      - ./test-results:/app/results
    working_dir: /app
    command: >
      sh -c "pip install --no-cache-dir -q paho-mqtt requests &&
             echo 'Dependencies installed.' &&
             python tests/run_integration_tests.py"
    depends_on:
      aicleaner-test:
        condition: service_healthy
    environment:
      - MQTT_HOST=mosquitto-test
      - MQTT_PORT=1883
      - HA_API_HOST=homeassistant
      - HA_API_PORT=8123
      - HA_ACCESS_TOKEN=${HA_ACCESS_TOKEN}
      - DEVICE_ID=aicleaner_v3_test
      - PYTHONUNBUFFERED=1
    networks:
      - aicleaner_test_network
    profiles:
      - testing

networks:
  aicleaner_test_network:
    driver: bridge

volumes:
  mqtt_data:
    driver: local
  mqtt_log:
    driver: local
  test_data:
    driver: local
  test_config:
    driver: local