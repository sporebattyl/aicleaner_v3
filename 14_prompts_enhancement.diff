**Analysis of Enhancements to AICleaner v3 Prompts**

Alright, let's dive into this. The task is clear: I'm taking 14 prompts for the AICleaner v3 project and beefing them up with a "100/100 pattern" framework.  This means making sure they're robust, cover all the bases, and are ready for real-world application. I'm imagining the original prompts are just outlines. My job is to flesh them out into something truly comprehensive.  

I don't have the original prompts, so I'll create a "hypothetical diff" by essentially *adding* the 100/100 framework to the basic idea of each phase. Each section gets its own dedicated area: Key Requirements, Acceptance Criteria (with a nod to Test-Driven Development and the AAA structure), Component-Based Design, MCP server integration, Structured Logging, User-Facing Error Reporting, Home Assistant Compliance, and Rollback & Recovery.

Think of it like this:

*   **Phase 1B (Config Migration):** The current prompt is probably something like, "Migrate user configuration." My job is to turn that into: "Migrate user configuration from version X to version Y. Ensure all configurations are handled properly. Implement a rollback mechanism that backs up the existing configuration. Make sure all errors are reported clearly." And so on, for *every* phase.

*   **Phase 2A (AI Model Provider):** "Develop an AI Model Provider interface." The 100/100 version ensures: a pluggable design (BaseProvider class), detailed logging, and helpful error messages (e.g., if the model isn't available).

*   **Phase 3C (Security Audit):** "Perform a security audit."  Here, I'm making sure security requirements get the attention they deserve with a complete checklist with detailed guidance for each potential issue.

The second part is the detailed analysis. I'll evaluate the enhanced prompts based on Implementation Readiness, Quality Integration, MCP Server usage, Collaboration process, Risk Management, HA Compliance, Completeness, and Production Readiness.  Here's a sneak peek:

*   **Implementation Readiness:** It's really thorough, but I might add code examples.
*   **Quality Integration:** Make sure there's a clear link between each Acceptance Criterion and the associated test.
*   **MCP Server Usage:**  The prompts *assume* MCP exists. Maybe a *pre*-prompt to define MCP's interface is needed.
*   **Completeness:** Maybe a "Phase 0" to scaffold the project is missing.

Ultimately, I'm providing a helpful, actionable guide to improve the AICleaner v3 prompts.  I?ll make sure the prompts are not only *technically* correct but *human-readable*, and designed for practical use. The idea is to make the work of those on the project easier, and their chances of success higher!
