openapi: 3.0.0
info:
  title: AICleaner v3 Core Service
  version: "1.0.0"
  description: |
    A simplified, power-user-focused API for AI inference, configuration, and monitoring.
    This specification defines the core endpoints for the AICleaner v3 service,
    focusing on simplicity and performance while providing maximum flexibility.

servers:
  - url: http://localhost:8000/v1

security:
  - ApiKeyAuth: []

paths:
  /generate:
    post:
      summary: AI Inference Endpoint
      description: Generates text using specified AI provider and model configuration.
      operationId: generateText
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateRequest'
            examples:
              gemini_request:
                value:
                  prompt: "Summarize the following text: ..."
                  provider: "gemini"
                  model: "gemini-2.5-pro"
                  temperature: 0.7
                  max_tokens: 1024
              openai_request:
                value:
                  prompt: "Write a Python function to calculate fibonacci"
                  provider: "openai"
                  model: "gpt-4"
                  temperature: 0.2
      responses:
        '200':
          description: Successful generation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /status:
    get:
      summary: Health Check
      description: Provides comprehensive status including AI provider health.
      operationId: getStatus
      responses:
        '200':
          description: Service is operational
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /metrics:
    get:
      summary: Performance Metrics
      description: Retrieves detailed performance data including costs and provider breakdowns.
      operationId: getMetrics
      responses:
        '200':
          description: Successful retrieval of metrics
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricsResponse'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /mqtt/devices:
    get:
      summary: List MQTT Devices
      description: Returns discovered and explicitly configured MQTT devices with management capabilities.
      operationId: getMqttDevices
      responses:
        '200':
          description: A list of MQTT devices
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MqttDevicesResponse'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /mqtt/devices/{device_id}:
    put:
      summary: Override MQTT Device Configuration
      description: Override auto-discovered device with explicit configuration.
      operationId: overrideMqttDevice
      parameters:
        - name: device_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MqttDeviceOverride'
      responses:
        '200':
          description: Device configuration overridden successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MqttDevice'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /config:
    get:
      summary: Get Configuration
      description: Retrieves current service configuration with redacted secrets.
      operationId: getConfiguration
      responses:
        '200':
          description: Current configuration with secrets redacted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigResponse'
        '500':
          $ref: '#/components/responses/InternalServerError'
    put:
      summary: Update Configuration
      description: Updates the service configuration. Secrets are write-only.
      operationId: updateConfiguration
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigRequest'
      responses:
        '200':
          description: Configuration updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'

components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key

  schemas:
    GenerateRequest:
      type: object
      properties:
        prompt:
          type: string
          description: The input text for the AI model.
          example: "Summarize the following text: ..."
        provider:
          type: string
          description: AI provider to use (overrides default).
          enum: ["openai", "gemini", "anthropic", "ollama"]
          example: "gemini"
        model:
          type: string
          description: Specific model within the provider.
          example: "gemini-2.5-pro"
        temperature:
          type: number
          format: float
          description: "Controls randomness. Range varies by provider."
          minimum: 0.0
          maximum: 2.0
          example: 0.7
        max_tokens:
          type: integer
          description: Maximum tokens to generate.
          minimum: 1
          maximum: 8192
          example: 1024
        provider_params:
          type: object
          description: Provider-specific parameters.
          additionalProperties: true
          example:
            top_p: 0.9
            frequency_penalty: 0.1
      required:
        - prompt

    GenerateResponse:
      type: object
      properties:
        text:
          type: string
          description: The generated text.
        model:
          type: string
          description: The model used for generation.
        provider:
          type: string
          description: The provider used.
        usage:
          type: object
          properties:
            prompt_tokens:
              type: integer
            completion_tokens:
              type: integer
            total_tokens:
              type: integer
        cost:
          type: object
          properties:
            amount:
              type: number
              format: float
            currency:
              type: string
              example: "USD"
        response_time_ms:
          type: number
          format: float

    StatusResponse:
      type: object
      properties:
        status:
          type: string
          enum: ["ok", "degraded", "error"]
          example: "ok"
        version:
          type: string
          example: "1.0.0"
        uptime_seconds:
          type: number
        providers:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ProviderStatus'
        mqtt:
          type: object
          properties:
            connected:
              type: boolean
            broker:
              type: string
            discovered_devices:
              type: integer

    ProviderStatus:
      type: object
      properties:
        available:
          type: boolean
        models:
          type: array
          items:
            type: string
        last_request:
          type: string
          format: date-time
        error_count:
          type: integer
        quota_remaining:
          type: object
          properties:
            requests:
              type: integer
            tokens:
              type: integer

    MetricsResponse:
      type: object
      properties:
        uptime_seconds:
          type: number
        total_requests:
          type: integer
        requests_per_minute:
          type: number
          format: float
        average_response_time_ms:
          type: number
          format: float
        error_rate:
          type: number
          format: float
          description: Percentage of failed requests
        providers:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ProviderMetrics'
        costs:
          type: object
          properties:
            total_usd:
              type: number
              format: float
            by_provider:
              type: object
              additionalProperties:
                type: number
                format: float

    ProviderMetrics:
      type: object
      properties:
        requests:
          type: integer
        avg_response_time_ms:
          type: number
          format: float
        error_count:
          type: integer
        total_tokens:
          type: integer
        cost_usd:
          type: number
          format: float

    MqttDevicesResponse:
      type: object
      properties:
        discovered:
          type: array
          items:
            $ref: '#/components/schemas/MqttDevice'
        explicit:
          type: array
          items:
            $ref: '#/components/schemas/MqttDevice'
        total_count:
          type: integer

    MqttDevice:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the device.
        name:
          type: string
          description: User-friendly name for the device.
        source:
          type: string
          enum: ["discovered", "explicit", "override"]
          description: How this device was configured.
        status:
          type: string
          enum: ["online", "offline", "unknown"]
        topics:
          type: object
          properties:
            subscribe:
              type: array
              items:
                type: string
            publish:
              type: array
              items:
                type: string
        last_seen:
          type: string
          format: date-time
        discovery_payload:
          type: object
          description: Original HA discovery payload (if discovered).
      required:
        - id
        - name
        - source

    MqttDeviceOverride:
      type: object
      properties:
        name:
          type: string
        topics:
          type: object
          properties:
            subscribe:
              type: array
              items:
                type: string
            publish:
              type: array
              items:
                type: string
        disable_discovery:
          type: boolean
          description: Disable auto-discovery for this device.
      required:
        - name

    ConfigResponse:
      type: object
      properties:
        ai_provider:
          type: string
          description: Default AI provider.
          example: "gemini"
        providers:
          type: object
          additionalProperties:
            type: object
            properties:
              enabled:
                type: boolean
              api_key_configured:
                type: boolean
              models:
                type: array
                items:
                  type: string
        mqtt:
          type: object
          properties:
            host:
              type: string
            port:
              type: integer
            auto_discover:
              type: boolean
            discovery_prefix:
              type: string
        performance:
          type: object
          properties:
            cache_enabled:
              type: boolean
            metrics_retention_days:
              type: integer

    ConfigRequest:
      type: object
      properties:
        ai_provider:
          type: string
          description: Default AI provider.
        api_keys:
          type: object
          additionalProperties:
            type: string
          description: API keys for providers (write-only).
        mqtt:
          type: object
          properties:
            host:
              type: string
            port:
              type: integer
            username:
              type: string
            password:
              type: string
            auto_discover:
              type: boolean
            discovery_prefix:
              type: string
        performance:
          type: object
          properties:
            cache_enabled:
              type: boolean
            metrics_retention_days:
              type: integer

    Error:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        details:
          type: object
          additionalProperties: true
      required:
        - code
        - message

  responses:
    BadRequest:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 400
            message: "Invalid request payload"

    InternalServerError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 500
            message: "An unexpected error occurred."