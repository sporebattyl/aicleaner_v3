# Development Docker Compose Override
# Use with: docker-compose -f docker-compose.yml -f docker-compose.dev.yml up

version: '3.8'

services:
  aicleaner:
    build:
      context: .
      dockerfile: Dockerfile
      target: production  # Use production stage for consistency
    volumes:
      # Mount source code for development
      - ./addons/aicleaner_v3:/usr/src/app:delegated
      - ./data:/data
      - ./logs:/logs
    environment:
      - ENVIRONMENT=development
      - LOG_LEVEL=debug
      - PYTHONUNBUFFERED=1
      - PYTHONDONTWRITEBYTECODE=1
    ports:
      - "8000:8000"
      - "5678:5678"  # debugpy port
    command: >
      sh -c "
        pip install debugpy &&
        python -m debugpy --listen 0.0.0.0:5678 --wait-for-client -m uvicorn api.backend:app 
        --host 0.0.0.0 
        --port 8000 
        --reload 
        --log-level debug
      "
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "2"

  redis:
    ports:
      - "6379:6379"
    command: >
      redis-server
      --appendonly no
      --maxmemory 128mb
      --maxmemory-policy allkeys-lru
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.5'

  prometheus:
    ports:
      - "9090:9090"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=24h'  # Short retention for dev
      - '--web.enable-lifecycle'
      - '--log.level=debug'
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'

  grafana:
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_LOG_LEVEL=debug
      - GF_USERS_ALLOW_SIGN_UP=true
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.5'

  nginx:
    ports:
      - "80:80"
    # Remove SSL for development
    volumes:
      - ./nginx/nginx.dev.conf:/etc/nginx/nginx.conf:ro
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: '0.25'

# Add development-specific services
  mailhog:
    image: mailhog/mailhog:latest
    container_name: aicleaner_mailhog
    ports:
      - "1025:1025"  # SMTP
      - "8025:8025"  # Web UI
    networks:
      - aicleaner_network

  adminer:
    image: adminer:latest
    container_name: aicleaner_adminer
    ports:
      - "8080:8080"
    networks:
      - aicleaner_network
    depends_on:
      - redis