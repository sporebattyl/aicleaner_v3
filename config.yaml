name: "AICleaner v3"
version: "1.0.0"
slug: "aicleaner_v3"
description: "Advanced AI-powered Home Assistant automation with intelligent device management"
url: "https://github.com/drewcifer/aicleaner_v3"
arch:
  - aarch64
  - amd64
  - armhf
  - armv7
  - i386
init: false
map:
  - config:rw
  - ssl
  - share
  - media
ports:
  8000/tcp: 8000
ports_description:
  8000/tcp: "AICleaner Web Interface (Not required for Ingress)"
webui: "http://[HOST]:[PORT:8000]"
ingress: true
ingress_port: 8000
ingress_stream: false
panel_icon: mdi:robot-intelligent
panel_title: AICleaner v3
options:
  log_level: info
  ai_providers:
    - provider: openai
      enabled: true
    - provider: gemini
      enabled: true
  zones:
    - name: "Living Room"
      enabled: true
      devices: []
  security:
    enabled: true
    encryption: true
    audit_logging: true
  performance:
    auto_optimization: true
    resource_monitoring: true
    caching: true
  ha:
    enabled: true
    service_domain: aicleaner
    websocket_url: ws://supervisor/core/websocket
    rest_api_url: http://supervisor/core/api
    register_services: true
    entity_prefix: aicleaner_
    device_name: "AICleaner Main Unit"
    update_interval: 30
    auto_register_entities: true
  mqtt:
    enabled: true
    broker_host: core-mosquitto
    broker_port: 1883
    username: ""
    password: ""
    discovery_prefix: homeassistant
    device_id: aicleaner_v3
    device_name: "AICleaner v3"
    qos_discovery: 1
    qos_state: 1
    retain_discovery: true
  privacy:
    enabled: true
    level: "balanced"
    models:
      face_detection:
        speed: "models/yunet.onnx"
        balanced: "models/retinaface.onnx"
        paranoid: "models/scrfd.onnx"
      object_detection:
        general: "models/yolov8m.onnx"
        license_plates: "models/yolov8_license_plates.onnx"
      text_detection: "models/paddle_ocr.onnx"
    redaction:
      face_mode: "blur"
      license_plate_mode: "black_box"
      pii_text_mode: "black_box"
    performance:
      max_image_size: [1920, 1080]
      parallel_processing: true
      model_caching: true
      async_processing: true
schema:
  log_level: list(trace|debug|info|notice|warning|error|fatal)
  ai_providers:
    - provider: str
      enabled: bool
      api_key: password
      model: str?
      max_tokens: int(500, 8000)?
  zones:
    - name: str
      enabled: bool
      devices: "[str]?"
      automation_rules: "[str]?"
  security:
    enabled: bool
    encryption: bool?
    audit_logging: bool
    ssl_certificate: str?
    ssl_key: str?
  performance:
    auto_optimization: bool
    resource_monitoring: bool
    caching: bool
    max_memory_mb: int(256, 4096)?
    max_cpu_percent: int(20, 95)?
  ha:
    enabled: bool
    service_domain: str
    websocket_url: str
    rest_api_url: str
    register_services: bool
    entity_prefix: str?
    device_name: str?
    update_interval: int(10, 300)?
    auto_register_entities: bool?
  mqtt:
    enabled: bool
    broker_host: str?
    broker_port: int(1, 65535)?
    username: str?
    password: password?
    discovery_prefix: str?
    device_id: str?
    device_name: str?
    qos_discovery: int(0, 2)?
    qos_state: int(0, 2)?
    retain_discovery: bool?
  privacy:
    enabled: bool
    level: list(speed|balanced|paranoid)
    models:
      face_detection:
        speed: str?
        balanced: str?
        paranoid: str?
      object_detection:
        general: str?
        license_plates: str?
      text_detection: str?
    redaction:
      face_mode: list(blur|pixelate|black_box)?
      license_plate_mode: list(blur|pixelate|black_box)?
      pii_text_mode: list(blur|pixelate|black_box)?
    performance:
      max_image_size: "[int]?"
      parallel_processing: bool?
      model_caching: bool?
      async_processing: bool?
image: "ghcr.io/drewcifer/aicleaner_v3-{arch}"
services:
  - mqtt:want
startup: application
boot: auto
hassio_api: true
hassio_role: default
homeassistant_api: true
host_network: false
auto_uart: false
apparmor: true
backup: full
